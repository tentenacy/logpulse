version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: logpulse
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - "13306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - logpulse-network

  mysqld-exporter:
    image: prom/mysqld-exporter:v0.14.0
    container_name: mysqld-exporter
    ports:
      - "19104:9104"
    environment:
      - DATA_SOURCE_NAME=root:1234@(mysql:3306)/logpulse
    depends_on:
      - mysql
    networks:
      - logpulse-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - logpulse-network

  broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: broker
    ports:
      - "19092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:19092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - logpulse-network

  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.9.0
    container_name: kafka-exporter
    ports:
      - "19308:9308"
    command:
      - "--kafka.server=broker:29092"
      - "--topic.filter=.*"
      - "--group.filter=.*"
      - "--web.listen-address=:9308"
      - "--web.telemetry-path=/metrics"
      - "--log.level=info"
    depends_on:
      - broker
    networks:
      - logpulse-network
    restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "19200:9200"
      - "19300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - logpulse-network

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:v1.9.0
    container_name: elasticsearch-exporter
    ports:
      - "19114:9114"
    command:
      - '--es.uri=http://elasticsearch:9200'
      - '--web.listen-address=:9114'
    depends_on:
      - elasticsearch
    networks:
      - logpulse-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "15601:5601"
    depends_on:
      - elasticsearch
    networks:
      - logpulse-network

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    ports:
      - "19100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - logpulse-network

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus
    ports:
      - "19090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    networks:
      - logpulse-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - elasticsearch-exporter
      - kafka-exporter
      - mysqld-exporter
      - node-exporter

  grafana:
    image: grafana/grafana:9.1.0
    container_name: grafana
    ports:
      - "13000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - logpulse-network
    depends_on:
      - prometheus

networks:
  logpulse-network:
    driver: bridge

volumes:
  mysql-data:
  es-data:
  prometheus-data:
  grafana-data: