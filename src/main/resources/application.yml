spring:
  application:
    name: logpulse
  profiles:
    active: dev
  config:
    import:
      - classpath:secrets.yml
      - classpath:env-${APP_ENVIRONMENT:docker}.yml
  datasource:
    url: jdbc:mysql://${logpulse.mysql.host}:${logpulse.mysql.port}/logpulse?rewriteBatchedStatements=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: LogPulseHikariPool
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 100
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
  sql:
    init:
      mode: always
      platform: mysql
  kafka:
    bootstrap-servers: ${logpulse.kafka.host}:${logpulse.kafka.port}
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      type: batch
      ack-mode: MANUAL_IMMEDIATE
  mail:
    host: ${mail.host:smtp.example.com}
    port: ${mail.port:587}
    username: ${mail.username:username}
    password: ${mail.password:password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  elasticsearch:
    uris: http://${logpulse.elasticsearch.host}:${logpulse.elasticsearch.port}
    rest:
      connection-timeout: 500
      read-timeout: 1000
      connection-retry-timeout: 500
    connection-timeout: 1000
    socket-timeout: 1000

server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

logpulse:
  kafka:
    topics:
      raw-logs: raw-logs
  batch:
    chunk-size: 100
    archive-days: 30
  alert:
    email:
      enabled: true
      sender: ${mail.sender:noreply@example.com}
      recipients: ${mail.recipients:admin@example.com}
  cleanup:
    retention-days: 90
  elasticsearch:
    enabled: true
    bulk-size: 1000
  monitor:
    error-threshold: 10
    error-time-window: 60000
  compression:
    enabled: true
    min-size: 1024
    algorithm: gzip
    stats-enabled: true

management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
      mail:
        enabled: false
      elasticsearch:
        enabled: false
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
    enable:
      jvm: true
      process: true
      system: true
      logback: true
      tomcat: true